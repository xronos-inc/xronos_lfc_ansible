
# SPDX-FileCopyrightText: (c) 2024 Xronos Inc.
# SPDX-License-Identifier: BSD-3-Clause
---
- name: Install libssl-dev
  become: true
  ansible.builtin.apt:
    pkg: libssl-dev

- name: Stat ~/.cache
  register: _cache_folder_query
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.cache"

- name: Create ~/.cache
  when: not _cache_folder_query.stat.exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.cache"
    state: directory
    mode: u=rwx,g=,o=

- name: Create cache folder {{ ansible_env.HOME}}/.cache/lf-lang
  ansible.builtin.file:
    path: "{{ ansible_env.HOME}}/.cache/lf-lang"
    state: directory
    mode: u=rwx,g=,o=

- name: Git clone lf-lang/reactor-c {{ lfc_rti_commit }}
  register: _rti_repo
  ansible.builtin.git:
    repo: "https://github.com/lf-lang/reactor-c"
    dest: "{{ ansible_env.HOME}}/.cache/lf-lang/reactor-c"
    version: "{{ lfc_rti_commit }}"
    force: true

- name: Query RTI installation
  register: _rti_installed
  changed_when: false
  failed_when: false
  ansible.builtin.command:
    cmd: which RTI

- name: Stat existence of RTI build artifact
  register: _rti_artifact_query
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME}}/.cache/lf-lang/build/RTI/RTI"

- name: Install RTI {{ lfc_rti_commit }}
  when: _rti_installed.rc != 0
        or _rti_repo.changed
        or not _rti_artifact_query.stat.exists
  block:
    - name: Create build folder
      ansible.builtin.file:
        path: "{{ ansible_env.HOME}}/.cache/lf-lang/build/RTI"
        recurse: true
        state: directory

    - name: Cmake RTI
      ansible.builtin.command:
        chdir: "{{ ansible_env.HOME}}/.cache/lf-lang/build/RTI"
        cmd: cmake -DAUTH=ON {{ ansible_env.HOME}}/.cache/lf-lang/reactor-c/core/federated/RTI

    - name: Run make
      community.general.make:
        chdir: "{{ ansible_env.HOME}}/.cache/lf-lang/build/RTI"

    - name: Run make install
      become: true
      community.general.make:
        chdir: "{{ ansible_env.HOME}}/.cache/lf-lang/build/RTI"
        target: install

    - name: Verify RTI installation
      register: _rti_installed
      changed_when: false
      failed_when: _rti_installed.rc != 0
      ansible.builtin.command:
        cmd: which RTI
